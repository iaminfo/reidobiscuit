#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace reibiscuit.Bussiness.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="reibiscui")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertEndereco(Endereco instance);
    partial void UpdateEndereco(Endereco instance);
    partial void DeleteEndereco(Endereco instance);
    partial void InsertPai(Pai instance);
    partial void UpdatePai(Pai instance);
    partial void DeletePai(Pai instance);
    partial void InsertPedido(Pedido instance);
    partial void UpdatePedido(Pedido instance);
    partial void DeletePedido(Pedido instance);
    partial void InsertUf(Uf instance);
    partial void UpdateUf(Uf instance);
    partial void DeleteUf(Uf instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertImagem(Imagem instance);
    partial void UpdateImagem(Imagem instance);
    partial void DeleteImagem(Imagem instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::reibiscuit.Bussiness.Properties.Settings.Default.reibiscuiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cidade> Cidades
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Endereco> Enderecos
		{
			get
			{
				return this.GetTable<Endereco>();
			}
		}
		
		public System.Data.Linq.Table<ItemPedido> ItemPedidos
		{
			get
			{
				return this.GetTable<ItemPedido>();
			}
		}
		
		public System.Data.Linq.Table<Pai> Pais
		{
			get
			{
				return this.GetTable<Pai>();
			}
		}
		
		public System.Data.Linq.Table<Pedido> Pedidos
		{
			get
			{
				return this.GetTable<Pedido>();
			}
		}
		
		public System.Data.Linq.Table<Uf> Ufs
		{
			get
			{
				return this.GetTable<Uf>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produtos
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Imagem> Imagems
		{
			get
			{
				return this.GetTable<Imagem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cidade")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private int _IdUf;
		
		private int _IdCidade;
		
		private EntitySet<Endereco> _Enderecos;
		
		private EntityRef<Uf> _Uf;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIdUfChanging(int value);
    partial void OnIdUfChanged();
    partial void OnIdCidadeChanging(int value);
    partial void OnIdCidadeChanged();
    #endregion
		
		public Cidade()
		{
			this._Enderecos = new EntitySet<Endereco>(new Action<Endereco>(this.attach_Enderecos), new Action<Endereco>(this.detach_Enderecos));
			this._Uf = default(EntityRef<Uf>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUf", DbType="Int NOT NULL")]
		public int IdUf
		{
			get
			{
				return this._IdUf;
			}
			set
			{
				if ((this._IdUf != value))
				{
					if (this._Uf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUfChanging(value);
					this.SendPropertyChanging();
					this._IdUf = value;
					this.SendPropertyChanged("IdUf");
					this.OnIdUfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Endereco", Storage="_Enderecos", ThisKey="IdCidade", OtherKey="IdCidade")]
		public EntitySet<Endereco> Enderecos
		{
			get
			{
				return this._Enderecos;
			}
			set
			{
				this._Enderecos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uf_Cidade", Storage="_Uf", ThisKey="IdUf", OtherKey="IdUf", IsForeignKey=true)]
		public Uf Uf
		{
			get
			{
				return this._Uf.Entity;
			}
			set
			{
				Uf previousValue = this._Uf.Entity;
				if (((previousValue != value) 
							|| (this._Uf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uf.Entity = null;
						previousValue.Cidades.Remove(this);
					}
					this._Uf.Entity = value;
					if ((value != null))
					{
						value.Cidades.Add(this);
						this._IdUf = value.IdUf;
					}
					else
					{
						this._IdUf = default(int);
					}
					this.SendPropertyChanged("Uf");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enderecos(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Enderecos(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private System.Guid _UserId;
		
		private string _Cpf;
		
		private EntitySet<Endereco> _Enderecos;
		
		private EntitySet<Pedido> _Pedidos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCpfChanging(string value);
    partial void OnCpfChanged();
    #endregion
		
		public Usuario()
		{
			this._Enderecos = new EntitySet<Endereco>(new Action<Endereco>(this.attach_Enderecos), new Action<Endereco>(this.detach_Enderecos));
			this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpf", DbType="VarChar(20)")]
		public string Cpf
		{
			get
			{
				return this._Cpf;
			}
			set
			{
				if ((this._Cpf != value))
				{
					this.OnCpfChanging(value);
					this.SendPropertyChanging();
					this._Cpf = value;
					this.SendPropertyChanged("Cpf");
					this.OnCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Endereco", Storage="_Enderecos", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Endereco> Enderecos
		{
			get
			{
				return this._Enderecos;
			}
			set
			{
				this._Enderecos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Pedido", Storage="_Pedidos", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Pedido> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enderecos(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Enderecos(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Endereco")]
	public partial class Endereco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Endereco1;
		
		private System.Nullable<int> _Numero;
		
		private string _Complemento;
		
		private string _Bairro;
		
		private int _IdCidade;
		
		private int _IdEndereco;
		
		private int _IdUsuario;
		
		private EntitySet<Pedido> _Pedidos;
		
		private EntityRef<Cidade> _Cidade;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEndereco1Changing(string value);
    partial void OnEndereco1Changed();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    partial void OnComplementoChanging(string value);
    partial void OnComplementoChanged();
    partial void OnBairroChanging(string value);
    partial void OnBairroChanged();
    partial void OnIdCidadeChanging(int value);
    partial void OnIdCidadeChanged();
    partial void OnIdEnderecoChanging(int value);
    partial void OnIdEnderecoChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    #endregion
		
		public Endereco()
		{
			this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
			this._Cidade = default(EntityRef<Cidade>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Endereco", Storage="_Endereco1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Endereco1
		{
			get
			{
				return this._Endereco1;
			}
			set
			{
				if ((this._Endereco1 != value))
				{
					this.OnEndereco1Changing(value);
					this.SendPropertyChanging();
					this._Endereco1 = value;
					this.SendPropertyChanged("Endereco1");
					this.OnEndereco1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complemento", DbType="VarChar(50)")]
		public string Complemento
		{
			get
			{
				return this._Complemento;
			}
			set
			{
				if ((this._Complemento != value))
				{
					this.OnComplementoChanging(value);
					this.SendPropertyChanging();
					this._Complemento = value;
					this.SendPropertyChanged("Complemento");
					this.OnComplementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bairro", DbType="NChar(10)")]
		public string Bairro
		{
			get
			{
				return this._Bairro;
			}
			set
			{
				if ((this._Bairro != value))
				{
					this.OnBairroChanging(value);
					this.SendPropertyChanging();
					this._Bairro = value;
					this.SendPropertyChanged("Bairro");
					this.OnBairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="Int NOT NULL")]
		public int IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEndereco", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEndereco
		{
			get
			{
				return this._IdEndereco;
			}
			set
			{
				if ((this._IdEndereco != value))
				{
					this.OnIdEnderecoChanging(value);
					this.SendPropertyChanging();
					this._IdEndereco = value;
					this.SendPropertyChanged("IdEndereco");
					this.OnIdEnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Endereco_Pedido", Storage="_Pedidos", ThisKey="IdEndereco", OtherKey="IdEndereco")]
		public EntitySet<Pedido> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Endereco", Storage="_Cidade", ThisKey="IdCidade", OtherKey="IdCidade", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Enderecos.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Enderecos.Add(this);
						this._IdCidade = value.IdCidade;
					}
					else
					{
						this._IdCidade = default(int);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Endereco", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Enderecos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Enderecos.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Endereco = this;
		}
		
		private void detach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Endereco = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemPedido")]
	public partial class ItemPedido
	{
		
		private int _Quantidade;
		
		private decimal _Preco;
		
		private string _Informacoes;
		
		private int _IdPedido;
		
		private int _IdProduto;
		
		public ItemPedido()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantidade", DbType="Int NOT NULL")]
		public int Quantidade
		{
			get
			{
				return this._Quantidade;
			}
			set
			{
				if ((this._Quantidade != value))
				{
					this._Quantidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Money NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this._Preco = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Informacoes", DbType="VarChar(20)")]
		public string Informacoes
		{
			get
			{
				return this._Informacoes;
			}
			set
			{
				if ((this._Informacoes != value))
				{
					this._Informacoes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPedido", DbType="Int NOT NULL")]
		public int IdPedido
		{
			get
			{
				return this._IdPedido;
			}
			set
			{
				if ((this._IdPedido != value))
				{
					this._IdPedido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", DbType="Int NOT NULL")]
		public int IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					this._IdProduto = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private int _IdPais;
		
		private EntitySet<Uf> _Ufs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIdPaisChanging(int value);
    partial void OnIdPaisChanged();
    #endregion
		
		public Pai()
		{
			this._Ufs = new EntitySet<Uf>(new Action<Uf>(this.attach_Ufs), new Action<Uf>(this.detach_Ufs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPais
		{
			get
			{
				return this._IdPais;
			}
			set
			{
				if ((this._IdPais != value))
				{
					this.OnIdPaisChanging(value);
					this.SendPropertyChanging();
					this._IdPais = value;
					this.SendPropertyChanged("IdPais");
					this.OnIdPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Uf", Storage="_Ufs", ThisKey="IdPais", OtherKey="IdPais")]
		public EntitySet<Uf> Ufs
		{
			get
			{
				return this._Ufs;
			}
			set
			{
				this._Ufs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ufs(Uf entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Ufs(Uf entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedido")]
	public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Detalhes;
		
		private int _status;
		
		private System.DateTime _Data;
		
		private int _IdUsuario;
		
		private int _IdPedido;
		
		private System.Nullable<System.DateTime> _DataEnvio;
		
		private int _IdEndereco;
		
		private EntityRef<Endereco> _Endereco;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetalhesChanging(string value);
    partial void OnDetalhesChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnIdPedidoChanging(int value);
    partial void OnIdPedidoChanged();
    partial void OnDataEnvioChanging(System.Nullable<System.DateTime> value);
    partial void OnDataEnvioChanged();
    partial void OnIdEnderecoChanging(int value);
    partial void OnIdEnderecoChanged();
    #endregion
		
		public Pedido()
		{
			this._Endereco = default(EntityRef<Endereco>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalhes", DbType="VarChar(140) NOT NULL", CanBeNull=false)]
		public string Detalhes
		{
			get
			{
				return this._Detalhes;
			}
			set
			{
				if ((this._Detalhes != value))
				{
					this.OnDetalhesChanging(value);
					this.SendPropertyChanging();
					this._Detalhes = value;
					this.SendPropertyChanged("Detalhes");
					this.OnDetalhesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPedido
		{
			get
			{
				return this._IdPedido;
			}
			set
			{
				if ((this._IdPedido != value))
				{
					this.OnIdPedidoChanging(value);
					this.SendPropertyChanging();
					this._IdPedido = value;
					this.SendPropertyChanged("IdPedido");
					this.OnIdPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEnvio", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataEnvio
		{
			get
			{
				return this._DataEnvio;
			}
			set
			{
				if ((this._DataEnvio != value))
				{
					this.OnDataEnvioChanging(value);
					this.SendPropertyChanging();
					this._DataEnvio = value;
					this.SendPropertyChanged("DataEnvio");
					this.OnDataEnvioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEndereco", DbType="Int NOT NULL")]
		public int IdEndereco
		{
			get
			{
				return this._IdEndereco;
			}
			set
			{
				if ((this._IdEndereco != value))
				{
					if (this._Endereco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEnderecoChanging(value);
					this.SendPropertyChanging();
					this._IdEndereco = value;
					this.SendPropertyChanged("IdEndereco");
					this.OnIdEnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Endereco_Pedido", Storage="_Endereco", ThisKey="IdEndereco", OtherKey="IdEndereco", IsForeignKey=true)]
		public Endereco Endereco
		{
			get
			{
				return this._Endereco.Entity;
			}
			set
			{
				Endereco previousValue = this._Endereco.Entity;
				if (((previousValue != value) 
							|| (this._Endereco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Endereco.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Endereco.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IdEndereco = value.IdEndereco;
					}
					else
					{
						this._IdEndereco = default(int);
					}
					this.SendPropertyChanged("Endereco");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Pedido", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uf")]
	public partial class Uf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Sigla;
		
		private int _IdPais;
		
		private int _IdUf;
		
		private EntitySet<Cidade> _Cidades;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnSiglaChanging(string value);
    partial void OnSiglaChanged();
    partial void OnIdPaisChanging(int value);
    partial void OnIdPaisChanged();
    partial void OnIdUfChanging(int value);
    partial void OnIdUfChanged();
    #endregion
		
		public Uf()
		{
			this._Cidades = new EntitySet<Cidade>(new Action<Cidade>(this.attach_Cidades), new Action<Cidade>(this.detach_Cidades));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sigla", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Sigla
		{
			get
			{
				return this._Sigla;
			}
			set
			{
				if ((this._Sigla != value))
				{
					this.OnSiglaChanging(value);
					this.SendPropertyChanging();
					this._Sigla = value;
					this.SendPropertyChanged("Sigla");
					this.OnSiglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", DbType="Int NOT NULL")]
		public int IdPais
		{
			get
			{
				return this._IdPais;
			}
			set
			{
				if ((this._IdPais != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaisChanging(value);
					this.SendPropertyChanging();
					this._IdPais = value;
					this.SendPropertyChanged("IdPais");
					this.OnIdPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUf", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUf
		{
			get
			{
				return this._IdUf;
			}
			set
			{
				if ((this._IdUf != value))
				{
					this.OnIdUfChanging(value);
					this.SendPropertyChanging();
					this._IdUf = value;
					this.SendPropertyChanged("IdUf");
					this.OnIdUfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uf_Cidade", Storage="_Cidades", ThisKey="IdUf", OtherKey="IdUf")]
		public EntitySet<Cidade> Cidades
		{
			get
			{
				return this._Cidades;
			}
			set
			{
				this._Cidades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Uf", Storage="_Pai", ThisKey="IdPais", OtherKey="IdPais", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Ufs.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Ufs.Add(this);
						this._IdPais = value.IdPais;
					}
					else
					{
						this._IdPais = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Uf = this;
		}
		
		private void detach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Uf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategoria;
		
		private string _Descricao;
		
		private EntitySet<Produto> _Produtos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Categoria()
		{
			this._Produtos = new EntitySet<Produto>(new Action<Produto>(this.attach_Produtos), new Action<Produto>(this.detach_Produtos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Produto", Storage="_Produtos", ThisKey="IdCategoria", OtherKey="IdCategoria")]
		public EntitySet<Produto> Produtos
		{
			get
			{
				return this._Produtos;
			}
			set
			{
				this._Produtos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Produtos(Produto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Preco;
		
		private bool _Disponibilidade;
		
		private int _IdProduto;
		
		private int _QuantidadeEstoque;
		
		private string _Descricao;
		
		private int _IdCategoria;
		
		private EntitySet<Imagem> _Imagems;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrecoChanging(decimal value);
    partial void OnPrecoChanged();
    partial void OnDisponibilidadeChanging(bool value);
    partial void OnDisponibilidadeChanged();
    partial void OnIdProdutoChanging(int value);
    partial void OnIdProdutoChanged();
    partial void OnQuantidadeEstoqueChanging(int value);
    partial void OnQuantidadeEstoqueChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    #endregion
		
		public Produto()
		{
			this._Imagems = new EntitySet<Imagem>(new Action<Imagem>(this.attach_Imagems), new Action<Imagem>(this.detach_Imagems));
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Money NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disponibilidade", DbType="Bit NOT NULL")]
		public bool Disponibilidade
		{
			get
			{
				return this._Disponibilidade;
			}
			set
			{
				if ((this._Disponibilidade != value))
				{
					this.OnDisponibilidadeChanging(value);
					this.SendPropertyChanging();
					this._Disponibilidade = value;
					this.SendPropertyChanged("Disponibilidade");
					this.OnDisponibilidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					this.OnIdProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdProduto = value;
					this.SendPropertyChanged("IdProduto");
					this.OnIdProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantidadeEstoque", DbType="Int NOT NULL")]
		public int QuantidadeEstoque
		{
			get
			{
				return this._QuantidadeEstoque;
			}
			set
			{
				if ((this._QuantidadeEstoque != value))
				{
					this.OnQuantidadeEstoqueChanging(value);
					this.SendPropertyChanging();
					this._QuantidadeEstoque = value;
					this.SendPropertyChanged("QuantidadeEstoque");
					this.OnQuantidadeEstoqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL")]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Imagem", Storage="_Imagems", ThisKey="IdProduto", OtherKey="IdProduto")]
		public EntitySet<Imagem> Imagems
		{
			get
			{
				return this._Imagems;
			}
			set
			{
				this._Imagems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Produto", Storage="_Categoria", ThisKey="IdCategoria", OtherKey="IdCategoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Produtos.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Produtos.Add(this);
						this._IdCategoria = value.IdCategoria;
					}
					else
					{
						this._IdCategoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Imagems(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_Imagems(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imagem")]
	public partial class Imagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private int _TipoImagem;
		
		private int _IdProduto;
		
		private int _IdImagem;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTipoImagemChanging(int value);
    partial void OnTipoImagemChanged();
    partial void OnIdProdutoChanging(int value);
    partial void OnIdProdutoChanged();
    partial void OnIdImagemChanging(int value);
    partial void OnIdImagemChanged();
    #endregion
		
		public Imagem()
		{
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoImagem", DbType="Int NOT NULL")]
		public int TipoImagem
		{
			get
			{
				return this._TipoImagem;
			}
			set
			{
				if ((this._TipoImagem != value))
				{
					this.OnTipoImagemChanging(value);
					this.SendPropertyChanging();
					this._TipoImagem = value;
					this.SendPropertyChanged("TipoImagem");
					this.OnTipoImagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", DbType="Int NOT NULL")]
		public int IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdProduto = value;
					this.SendPropertyChanged("IdProduto");
					this.OnIdProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdImagem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdImagem
		{
			get
			{
				return this._IdImagem;
			}
			set
			{
				if ((this._IdImagem != value))
				{
					this.OnIdImagemChanging(value);
					this.SendPropertyChanging();
					this._IdImagem = value;
					this.SendPropertyChanged("IdImagem");
					this.OnIdImagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Imagem", Storage="_Produto", ThisKey="IdProduto", OtherKey="IdProduto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.Imagems.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.Imagems.Add(this);
						this._IdProduto = value.IdProduto;
					}
					else
					{
						this._IdProduto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
